package jetbrains.mps.samples.Shapes.typesystem;

/*Generated by MPS */

import jetbrains.mps.errors.QuickFix_Runtime;
import jetbrains.mps.smodel.SNodePointer;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;

public class IncreaseSize_QuickFix extends QuickFix_Runtime {
  public IncreaseSize_QuickFix() {
    super(new SNodePointer("r:e44eb14d-c2bb-4d65-bb30-217515d5e47a(jetbrains.mps.samples.Shapes.typesystem)", "1891605514471513485"));
  }
  public String getDescription(SNode node) {
    return "increase size of the " + ((String) IncreaseSize_QuickFix.this.getField("color")[0]) + " square by " + ((Integer) IncreaseSize_QuickFix.this.getField("newSize")[0]);
  }
  public void execute(SNode node) {
    SPropertyOperations.assign(SNodeOperations.cast(node, CONCEPTS.Square$jR), PROPS.size$wB$e, SPropertyOperations.getInteger(SNodeOperations.cast(node, CONCEPTS.Square$jR), PROPS.size$wB$e) + ((Integer) IncreaseSize_QuickFix.this.getField("newSize")[0]));
  }

  private static final class CONCEPTS {
    /*package*/ static final SConcept Square$jR = MetaAdapterFactory.getConcept(0x16bafbb4c6cd4cc5L, 0x83327c6de8729b3fL, 0x51dcaa29974fc1a2L, "jetbrains.mps.samples.Shapes.structure.Square");
  }

  private static final class PROPS {
    /*package*/ static final SProperty size$wB$e = MetaAdapterFactory.getProperty(0x16bafbb4c6cd4cc5L, 0x83327c6de8729b3fL, 0x51dcaa29974fc1a2L, 0x51dcaa29974fc1a8L, "size");
  }
}
