package jetbrains.mps.samples.Shapes.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Canvas = 0;
  public static final int Circle = 1;
  public static final int Color = 2;
  public static final int ColorReference = 3;
  public static final int Command = 4;
  public static final int EmptyLine = 5;
  public static final int Shape = 6;
  public static final int Square = 7;
  public static final int VarDeclaration = 8;
  public static final int VarReference = 9;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0x16bafbb4c6cd4cc5L, 0x83327c6de8729b3fL);
    builder.put(0x51dcaa29974fa71dL, Canvas);
    builder.put(0x51dcaa29974fc198L, Circle);
    builder.put(0x6314ff8d5bf97588L, Color);
    builder.put(0x3a2b0182df2201afL, ColorReference);
    builder.put(0x11ad3ddb3ea898d7L, Command);
    builder.put(0x1a405531794459a4L, EmptyLine);
    builder.put(0x51dcaa29974fc161L, Shape);
    builder.put(0x51dcaa29974fc1a2L, Square);
    builder.put(0x11ad3ddb3ea98183L, VarDeclaration);
    builder.put(0x11ad3ddb3eac6c2eL, VarReference);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
